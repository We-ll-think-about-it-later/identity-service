definitions:
  model.ProfileInfo:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      userName:
        type: string
    type: object
  types.AuthenticateRequestBody:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  types.AuthenticateResponseBody:
    properties:
      user_id:
        type: string
    type: object
  types.CreateUserProfileRequestBody:
    properties:
      firstname:
        type: string
      lastname:
        type: string
      username:
        type: string
    required:
    - firstname
    - username
    type: object
  types.ErrorResponseBody:
    properties:
      error:
        type: string
    type: object
  types.GetTokensRequestBody:
    properties:
      code:
        type: integer
    required:
    - code
    type: object
  types.GetTokensResponseBody:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  types.RefreshRequestBody:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  types.RefreshResponseBody:
    properties:
      access_token:
        type: string
    type: object
  types.UpdateUserProfileRequestBody:
    properties:
      firstname:
        type: string
      lastname:
        type: string
      username:
        type: string
    type: object
  types.UserProfileResponseBody:
    properties:
      firstname:
        type: string
      lastname:
        type: string
      username:
        type: string
    type: object
  types.UserSearchResultResponseBody:
    properties:
      profile:
        allOf:
        - $ref: '#/definitions/model.ProfileInfo'
        description: Include profile info if available
      user_id:
        type: string
    type: object
info:
  contact: {}
  title: Identity service
  version: "1.0"
paths:
  /auth/authenticate:
    post:
      consumes:
      - application/json
      description: Authenticates a user and sends a verification code to their email.
        Returns the user's UUID.
      parameters:
      - description: Authentication request body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.AuthenticateRequestBody'
      - description: SHA-256 hash of device fingerprint
        in: header
        name: X-Device-Fingerprint
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User found
          schema:
            $ref: '#/definitions/types.AuthenticateResponseBody'
        "201":
          description: User created
          schema:
            $ref: '#/definitions/types.AuthenticateResponseBody'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
      summary: Authenticate
      tags:
      - auth
  /auth/token:
    post:
      consumes:
      - application/json
      description: Retrieves access and refresh tokens after verification code entry.  The
        refresh token is set in an HTTP-only cookie by the API Gateway.
      parameters:
      - description: Get tokens request body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.GetTokensRequestBody'
      - description: User ID
        in: header
        name: X-User-Id
        required: true
        type: string
      - description: SHA-256 hash of device fingerprint
        in: header
        name: X-Device-Fingerprint
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Tokens issued
          schema:
            $ref: '#/definitions/types.GetTokensResponseBody'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "401":
          description: Invalid user ID or user not found
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "403":
          description: Invalid verification code
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
      summary: GetTokens
      tags:
      - auth
  /auth/token/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes the access token. The refresh token is retrieved from
        an HTTP-only cookie by the API Gateway.
      parameters:
      - description: Refresh request body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.RefreshRequestBody'
      - description: User ID
        in: header
        name: X-User-Id
        required: true
        type: string
      - description: SHA-256 hash of device fingerprint
        in: header
        name: X-Device-Fingerprint
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Access token refreshed
          schema:
            $ref: '#/definitions/types.RefreshResponseBody'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "401":
          description: Invalid user ID or user not found
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "403":
          description: Invalid refresh token
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
      summary: Refresh
      tags:
      - auth
  /users/{user_id}/profile:
    get:
      consumes:
      - application/json
      description: Gets user profile information.
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: SHA-256 hash of device fingerprint
        in: header
        name: X-Device-Fingerprint
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Profile found
          schema:
            $ref: '#/definitions/types.UserProfileResponseBody'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "404":
          description: User or profile not found
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
      summary: GetUserProfile
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Updates user profile information.
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Update user profile request body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUserProfileRequestBody'
      - description: SHA-256 hash of device fingerprint
        in: header
        name: X-Device-Fingerprint
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated
          schema:
            $ref: '#/definitions/types.UserProfileResponseBody'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "404":
          description: User or profile not found
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "409":
          description: Username already taken" // Added 409 conflict
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
      summary: UpdateUserProfile
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Creates user profile information.
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Create user profile request body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.CreateUserProfileRequestBody'
      - description: SHA-256 hash of device fingerprint
        in: header
        name: X-Device-Fingerprint
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Profile created
          schema:
            $ref: '#/definitions/types.UserProfileResponseBody'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "409":
          description: Username already taken" // Added 409 conflict
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
      summary: CreateUserProfile
      tags:
      - users
  /users/search:
    get:
      consumes:
      - application/json
      description: Searches for users by username using fuzzy matching.
      parameters:
      - description: Search term for username
        in: query
        name: searchTerm
        required: true
        type: string
      - description: SHA-256 hash of device fingerprint
        in: header
        name: X-Device-Fingerprint
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Users found
          schema:
            items:
              $ref: '#/definitions/types.UserSearchResultResponseBody'
            type: array
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.ErrorResponseBody'
      summary: SearchUsers
      tags:
      - users
swagger: "2.0"
